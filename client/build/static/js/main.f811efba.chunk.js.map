{"version":3,"sources":["assets/img/eventImgDefault.png","assets/img/collaboration2.svg","assets/img/signup.svg","assets/img/createEvent.svg","assets/img/publish.svg","assets/img/favicon.ico","assets/fonts/Hallosans.otf","components/Context.js","components/NavBarSignedIn.js","components/NavBarSignedOut.js","components/CarouselSlide.js","components/CarouselLanding.js","components/Landing.js","components/Login.js","components/Registration.js","components/EventCard.js","components/Events.js","components/SignUp.js","components/Footer.js","components/Account.js","components/Map.js","components/GoogleMapsAutocomplete.js","components/EventInformation.js","components/CreateEvent.js","components/Contact.js","components/Faq.js","components/Logout.js","components/DeletedAccount.js","components/App.js","index.js"],"names":["module","exports","Context","createContext","NavBarSignedIn","history","useHistory","useContext","loggedIn","setLoggedIn","setUserData","useState","isNavVisible","setIsNavVisible","isSmallScreen","setIsSmallScreen","titleIndex","setTitleIndex","title","useEffect","interval","setInterval","setTimeout","index","mediaQuery","window","matchMedia","addListener","handleMediaQueryChange","removeListener","matches","push","to","onClick","id","direction","text","length","springConfig","presets","molasses","className","icon","faBars","style","left","activeClassName","localStorage","clear","NavBarSignedOut","CarouselSlide","event","setEventInfo","linkToEvent","setLinkToEvent","backgroundImage","imgUrl","location","setItem","JSON","stringify","Carousel","require","CarouselLanding","allEventsTogether","showArrows","showIndicators","showStatus","autoPlay","infiniteLoop","showThumbs","stopOnHover","transitionTime","slice","map","i","key","Landing","toFindEvent","setToFindEvent","toAddEvent","setToAddEvent","scrollTo","color","num","type","bg","steps","loop","Infinity","wrapper","src","Developers","alt","Login","userData","setToken","email","setEmail","password","setPassword","errorMsg","setErrorMsg","handleLogin","e","a","preventDefault","loginData","logged","method","headers","body","fetch","resp","json","data","console","log","user","header","get","success","onSubmit","faEnvelope","placeholder","name","value","onChange","target","required","faLock","faGithubAlt","href","Registration","Signin","CreateEvent","Publish","EventCard","el","setIsEventClicked","Date","date","getTime","time","Events","meetups","meetupsCities","workshops","workshopsCities","conventions","conventionsCities","isVisible","setIsVisible","isEventClicked","eventType","setEventType","selectedCity","setSelectedCity","smooth","top","selected","disabled","city","filter","meetup","workshop","convention","faSpinner","spin","SignUp","setName","website","setWebsite","typeOfUser","setTypeOfUser","avatar","setAvatar","avatars","handleSignUp","signUpData","currentTarget","htmlFor","Footer","faQuestionCircle","faPaperPlane","Account","getUserData","token","editInfo","setEditInfo","newName","setNewName","newEmail","setNewEmail","newPassword","setNewPassword","newAvatar","setNewAvatar","isAccountDeleted","setIsAccountDeleted","listOfAvatars","refresh","setRefresh","handleSubmit","events","favoriteMeetups","favoriteWorkshops","favoriteConventions","newInfo","newInfoAndPassword","newUserData","response","deleteAccount","deletedUser","_id","request","height","confirm","faFullHeart","googleApi","process","Geocode","setApiKey","enableDebug","Map","props","getCity","addressArray","types","long_name","getArea","j","getState","setState","onInfoWindowClose","onPlaceSelected","place","address","formatted_address","address_components","area","state","latValue","geometry","lat","lngValue","lng","markerPosition","mapPosition","onMarkerDragEnd","newLat","latLng","newLng","fromLatLng","then","results","error","center","this","nextProps","nextState","AsyncMap","withScriptjs","withGoogleMap","google","defaultZoom","zoom","defaultCenter","draggable","onDragEnd","position","onClose","padding","margin","undefined","googleMapURL","loadingElement","containerElement","mapElement","React","Component","GoogleMapsAutocomplete","isRequired","setLocation","setCoordinates","setLat","setLng","inputClassName","onSelect","input","description","geocodeByAddress","getLatLng","res","EventInformation","unfilteredMeetups","setMeetups","eventInfo","editMode","setEditMode","newDate","setNewDate","newTime","setNewTime","newTitle","setNewTitle","newDescription","setNewDescription","newLocation","setNewLocation","newCoordinates","setNewCoordinates","likedEvent","setLikedEvent","getItem","parse","deleteEvent","eventToDelete","deletedEvent","removeItem","setIsEventDeleted","Moment","format","includes","coordinates","newEventInfo","isEventDeleted","handleFavorite","eventId","newFavoriteEvent","star","authorId","width","imgUrlUrl","FacebookShareButton","url","quote","hashtag","FacebookIcon","size","TwitterShareButton","TwitterIcon","fontSize","faMapMarkerAlt","faHeart","setTitle","hostedBy","setHostedBy","setDate","setTime","setDescription","setUrl","image","setImage","statusAdded","setStatusAdded","handleCreateEvent","imgBody","FormData","append","axios","post","status","script","document","createElement","async","appendChild","removeChild","pattern","files","cols","rows","Contact","form","setForm","userName","setUserName","userEmail","setUserEmail","userMessage","setUserMessage","options","res1","alert","faCheckDouble","Faq","scrollTop","behavior","textDecoration","Logout","isLoggedOut","setIsLoggedOut","DeletedAccount","App","setMeetupsCities","setWorkshops","setWorkshopsCities","setConventions","setConventionsCities","setAllEventsTogether","setUnfilteredMeetups","fetchEvents","allEvents","allMeetups","request1","split","parseFloat","filteredMeetups","sort","b","citiesWithMeetups","Set","allWorkshops","request2","allFilteredWorkshops","citiesWithWorkshops","allConventions","request3","allFilteredConventions","citiesWithConventions","filteredEvents","Provider","path","exact","component","ReactDOM","render","img","getElementById"],"mappings":"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","file":"static/js/main.f811efba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eventImgDefault.549ee370.png\";","module.exports = __webpack_public_path__ + \"static/media/collaboration2.acec5eca.svg\";","module.exports = __webpack_public_path__ + \"static/media/signup.3d9d6e31.svg\";","module.exports = __webpack_public_path__ + \"static/media/createEvent.83512787.svg\";","module.exports = __webpack_public_path__ + \"static/media/publish.9fb33ee1.svg\";","module.exports = __webpack_public_path__ + \"static/media/favicon.b6a978d6.ico\";","module.exports = __webpack_public_path__ + \"static/media/Hallosans.54807e71.otf\";","import { createContext } from \"react\";\n\nconst Context = createContext(null);\n\nexport default Context;","import React, { useState, useEffect, useContext } from 'react';\nimport Context from './Context';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport '../style/NavBar.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport TextTransition, { presets } from \"react-text-transition\";\n\n\nconst NavBarSignedIn = () => {\n    const history = useHistory();\n\n    const { loggedIn, setLoggedIn, setUserData } = useContext(Context);\n\n    const [isNavVisible, setIsNavVisible] = useState(false);\n    const [isSmallScreen, setIsSmallScreen] = useState(false);\n\n    // this is the LOGO:\n    const [titleIndex, setTitleIndex] = useState(0);\n    const title = [\n        \"Devents\",\n        \"Events\",\n        \"for\",\n        \"developers\"\n    ];\n\n    useEffect(() => {\n        let interval = true;\n\n        if (interval) {\n            setInterval(() => {\n                setTimeout(() => {\n                    setTitleIndex(index => index + 1);\n                    setTimeout(() => {\n                        setTitleIndex(index => index + 1);\n                        setTimeout(() => {\n                            setTitleIndex(index => index + 1);\n                            setTimeout(() => {\n                                setTitleIndex(index => index + 1);\n                            }, 800);\n                        }, 800);\n                    }, 800);\n                }, 800);\n            }, 12000);\n        }\n\n        return () => interval = false;\n    }, []);\n\n    useEffect(() => {\n        const mediaQuery = window.matchMedia('(max-width: 670px)');\n        mediaQuery.addListener(handleMediaQueryChange);\n        handleMediaQueryChange(mediaQuery);\n\n        return () => {\n            mediaQuery.removeListener(handleMediaQueryChange);\n        };\n    }, [])\n\n    const handleMediaQueryChange = mediaQuery => {\n        if (mediaQuery.matches) {\n            setIsSmallScreen(true);\n        } else {\n            setIsSmallScreen(false);\n        }\n    };\n\n    useEffect(() => {\n        !loggedIn && history.push('/logout');\n    });\n\n    return (\n        <div>\n            <header>\n                <NavLink to=\"/\" onClick={() => setIsNavVisible(false)}>\n                    <h1 id=\"logo\">\n                        <TextTransition\n                            direction={'down'}\n                            text={title[titleIndex % title.length]}\n                            springConfig={presets.molasses}\n                        />\n                    </h1>\n                </NavLink>\n                <FontAwesomeIcon className=\"menu-bars\" icon={faBars} onClick={() => setIsNavVisible(!isNavVisible)} />\n                <nav style={{ left: isNavVisible || !isSmallScreen ? '0' : '100%' }}>\n                    <ul className=\"nav-group\">\n                        <li><NavLink to=\"/events\" onClick={() => setIsNavVisible(false)} activeClassName=\"selected-section\" className=\"underline\">Find events</NavLink></li>\n                        <li><NavLink to=\"/addevent\" onClick={() => setIsNavVisible(false)} activeClassName=\"selected-section\" className=\"underline\">Add event</NavLink></li>\n                    </ul>\n                    <ul className=\"nav-group\">\n                        <li><NavLink to=\"/account\" onClick={() => setIsNavVisible(false)} activeClassName=\"selected-section\" className=\"underline\">ACCOUNT</NavLink></li>\n                        <li><NavLink to=\"/logout\" onClick={() => { localStorage.clear(); setIsNavVisible(false); setLoggedIn(false) }} className=\"underline\">LOG OUT</NavLink></li>\n                    </ul>\n                </nav>\n            </header>\n        </div>\n    );\n}\n\nexport default NavBarSignedIn;\n","import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../style/NavBar.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport TextTransition, { presets } from \"react-text-transition\";\n// import Logo from '../assets/img/devents-logo2.png';\n\nconst NavBarSignedOut = () => {\n    const [isNavVisible, setIsNavVisible] = useState(false);\n    const [isSmallScreen, setIsSmallScreen] = useState(false);\n\n    const [titleIndex, setTitleIndex] = useState(0);\n    const title = [\n        \"Devents\",\n        \"Events\",\n        \"for\",\n        \"developers\"\n    ];\n\n    useEffect(() => {\n        let interval = true;\n\n        if (interval) {\n            setInterval(() => {\n                setTimeout(() => {\n                    setTitleIndex(index => index + 1);\n                    setTimeout(() => {\n                        setTitleIndex(index => index + 1);\n                        setTimeout(() => {\n                            setTitleIndex(index => index + 1);\n                            setTimeout(() => {\n                                setTitleIndex(index => index + 1);\n                            }, 800);\n                        }, 800);\n                    }, 800);\n                }, 800);\n            }, 12000);\n        }\n\n        return () => interval = false;\n    }, []);\n\n    useEffect(() => {\n        const mediaQuery = window.matchMedia('(max-width: 670px)');\n        mediaQuery.addListener(handleMediaQueryChange);\n        handleMediaQueryChange(mediaQuery);\n\n        return () => {\n            mediaQuery.removeListener(handleMediaQueryChange);\n        };\n    }, [])\n\n    const handleMediaQueryChange = mediaQuery => {\n        if (mediaQuery.matches) {\n            setIsSmallScreen(true);\n        } else {\n            setIsSmallScreen(false);\n        }\n    };\n\n    const toggleNav = () => {\n        setIsNavVisible(!isNavVisible);\n    };\n\n    return (\n        <div>\n            <header>\n                <NavLink to=\"/\" onClick={() => setIsNavVisible(false)}>\n                    <h1 id=\"logo\">\n                        <TextTransition\n                            direction={'down'}\n                            text={title[titleIndex % title.length]}\n                            springConfig={presets.molasses}\n                        />\n                    </h1>\n                    {/* <h1 id=\"logo\">\n                        <img src={Logo} id=\"logo-img\" alt=\"\" />\n                    </h1> */}\n                </NavLink>\n                <FontAwesomeIcon className=\"menu-bars\" icon={faBars} onClick={toggleNav} />\n                <nav style={{ left: isNavVisible || !isSmallScreen ? '0' : '100%' }}>\n                    <ul className=\"nav-group\">\n                        <li><NavLink to=\"/events\" onClick={() => setIsNavVisible(false)} activeClassName=\"selected-section\" className=\"underline\">Find events</NavLink></li>\n                        <li><NavLink to=\"/registration\" onClick={() => setIsNavVisible(false)} activeClassName=\"selected-section\" className=\"underline\">Add event</NavLink></li>\n                    </ul>\n                    <ul className=\"nav-group\">\n                        <li><NavLink to=\"/login\" onClick={() => setIsNavVisible(false)} activeClassName=\"selected-section\" className=\"underline\">LOG IN</NavLink></li>\n                        <li><NavLink to=\"/signup\" onClick={() => setIsNavVisible(false)} activeClassName=\"selected-section\" className=\"underline\">SIGN UP</NavLink></li>\n                    </ul>\n                </nav>\n            </header>\n        </div>\n    );\n}\n\nexport default NavBarSignedOut;\n","import React, { useState, useEffect, useContext } from 'react';\nimport Context from './Context';\nimport { useHistory } from 'react-router-dom';\nimport '../style/CarouselSlide.scss';\nimport imgDefault from '../assets/img/eventImgDefault.png'\n\nconst CarouselSlide = ({ event }) => {\n    const history = useHistory();\n\n    const { setEventInfo } = useContext(Context);\n\n    const [linkToEvent, setLinkToEvent] = useState(false);\n\n    useEffect(() => {\n        linkToEvent && history.push('/event');\n    });\n\n    // console.log('EVENT:', event);\n\n    return (\n        <div className=\"slide-container\" >\n            <div className=\"oneSlide\" style={{ backgroundImage: `url(\"${event.imgUrl}\")` }}>\n                <div className=\"slide-text\">\n                    <h2 className=\"titleAdvert\">{event.title}</h2>\n                    <p className=\"textAdvert\">{event.location}</p>\n\n                    <button className=\"button checkButton\" onClick={() => {\n                        setEventInfo(event);\n                        localStorage.setItem('event-info', JSON.stringify(event))\n                        setLinkToEvent(true)\n                    }}>Check it out!</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CarouselSlide;\n","import React, { useContext, useEffect } from 'react';\nimport Context from './Context';\nimport '../style/CarouselLanding.scss';\nimport CarouselSlide from './CarouselSlide';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nconst Carousel = require('react-responsive-carousel').Carousel;\n\n\nconst CarouselLanding = () => {\n\n    const { allEventsTogether } = useContext(Context);\n\n\n    return (\n        <Carousel\n            showArrows={true}\n            showIndicators={false}\n            showStatus={false}\n            autoPlay={true}\n            infiniteLoop={true}\n            showThumbs={false}\n            stopOnHover={false}\n            interval={3500}\n            transitionTime={600}\n            className=\"carousel\"\n        >\n            {\n                allEventsTogether &&\n                allEventsTogether.slice(0, 8).map((event, i) => <CarouselSlide key={i} event={event} />)\n            }\n        </Carousel>\n    );\n}\n\nexport default CarouselLanding;\n","import React, { useState, useEffect, useContext } from 'react';\nimport Context from './Context';\nimport { useHistory } from 'react-router-dom';\nimport '../style/Landing.scss';\nimport Developers from '../assets/img/collaboration2.svg';\nimport ParticlesBg from 'particles-bg';\nimport Typical from 'react-typical';\nimport CarouselLanding from './CarouselLanding';\n\n\nconst Landing = () => {\n    const history = useHistory();\n\n    const { loggedIn } = useContext(Context);\n\n    const [toFindEvent, setToFindEvent] = useState(false);\n    const [toAddEvent, setToAddEvent] = useState(false);\n\n    // by clicking on 'FIND EVENT' it will be redirected to the event's info\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n    useEffect(() => {\n        toFindEvent && history.push('/events');\n\n        toAddEvent && loggedIn && history.push('/addevent');\n        toAddEvent && !loggedIn && history.push('/registration');\n    });\n\n    return (\n        <div className=\"landing space-navbar\">\n            <main className=\"landing-main\">\n                <ParticlesBg color=\"#8d8d8d\" num={50} type=\"cobweb\" bg={true} />\n                <h1 className=\"slide-from-left\"><span className=\"underscore\">Never miss</span> <br /><span className=\"keyword\"><strong>events for developers</strong></span><br /> <span className=\"underscore again\">again</span></h1>\n                <div className=\"container-description\">\n                    <Typical\n                        steps={['Search for conferences', 1500, 'Assist to workshops', 1500, 'Create your own meetups', 1500, 'Push up your social skills', 1500]}\n                        loop={Infinity}\n                        wrapper=\"h4\"\n                    />\n                </div>\n                <div className=\"call-buttons\">\n                    <button className=\"button action-button scale-in-center\" onClick={() => setToFindEvent(true)}>FIND EVENT</button>\n                    <button className=\"button action-button scale-in-center\" onClick={() => setToAddEvent(true)}>ADD EVENT</button>\n                </div>\n                <img src={Developers} alt=\"Developers\" className=\"developers\" />\n            </main>\n            <section className=\"carousel\">\n                <CarouselLanding />\n            </section>\n        </div>\n    );\n}\n\nexport default Landing;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from './Context';\n\nimport '../style/Login.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons';\n\nimport ParticlesBg from 'particles-bg';\n\n\n\n\nconst Login = () => {\n    const history = useHistory();\n    const { userData, setUserData, setToken, setLoggedIn, loggedIn } = useContext(Context);\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('')\n    // set a status for what happens after login \n    const [errorMsg, setErrorMsg] = useState(false)\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n\n    const handleLogin = async (e) => {\n        e.preventDefault()\n\n        const loginData = {\n            email,\n            password\n        };\n\n        const logged = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n\n            },\n            body: JSON.stringify(loginData)\n        };\n        const resp = await fetch('/users/login', logged)\n        const data = await resp.json()\n        console.log(data.user);\n\n        const header = resp.headers.get('x-auth');\n\n        if (data.success) {\n            localStorage.setItem('token', header);\n            setToken(header);\n            setUserData(data.user)\n            setLoggedIn(true)\n        } else {\n            setErrorMsg(true)\n        }\n    }\n\n\n\n    useEffect(() => {\n        loggedIn && history.push('/events')\n    });\n\n\n    return (\n        <main className=\"login-container space-navbar\">\n\n\n            <ParticlesBg color=\"#8d8d8d\" num={55} type=\"cobweb\" bg={true} />\n            <form className=\"login-form puff-in-center\" onSubmit={handleLogin}>\n                <h2 className=\"h2\">LOG IN</h2>\n                <label className=\"login-field\">\n                    <FontAwesomeIcon className=\"log-icons\" icon={faEnvelope} />\n                    <input className=\"login-input\"\n                        type=\"email\"\n                        placeholder=\"your email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required />\n                </label>\n                <label className=\"login-field\">\n                    <FontAwesomeIcon className=\"log-icons\" icon={faLock} />\n                    <input\n                        className=\"login-input\"\n                        type=\"password\"\n                        placeholder=\"your password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required />\n                </label>\n                {errorMsg ? <p>Email or password incorrect</p> : null}\n                <button className=\"button login-btn\" type=\"submit\">LOG IN</button>\n            </form>\n\n            <p className=\"github-log\">Login with your<FontAwesomeIcon className=\"github-icon\" icon={faGithubAlt} />GitHub account?\n                <a className=\"github-link\" href=\"/auth/github\">Click here</a></p>\n        </main>\n    )\n}\n\nexport default Login; \n","\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport ParticlesBg from 'particles-bg';\nimport '../style/Registration.scss'\nimport Signin from '../assets/img/signup.svg'\nimport CreateEvent from '../assets/img/createEvent.svg'\nimport Publish from '../assets/img/publish.svg';\n\n\n\n\nconst Registration = () => {\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n\n    return (\n        <div className=\"space-wrap space-navbar\">\n            <ParticlesBg color=\"#8d8d8d\" num={50} type=\"cobweb\" bg={true} />\n            <div className=\"main-text\">\n                <h1 className=\"slide-from-left\">For developers, by developers.<br /><span className=\"second-line\">Where finding each other is</span>  <span className=\"underscore-2\"> simple !</span></h1>\n            </div>\n\n            <h2 className=\"question\">DO YOU WANT TO SHARE YOUR EVENT? NO PROBLEM!</h2>\n\n            <div className=\"container\">\n                <div className=\"squares fade-in\">\n                    <div className=\"img-1\">\n                        <img src={Signin} alt=\"sing up\" className=\"img-registration\" />\n                    </div>\n\n                    <div className=\"aside aside-1\">\n                        <h3 className=\"title\">EASY SIGN UP</h3>\n                        <p className=\"registration-p\">Create an account with only your name and email address.</p>\n                    </div>\n                </div>\n\n                <div className=\"squares square-2 fade-in\">\n                    <div className=\"img-1\">\n                        <img src={CreateEvent} alt=\"create an event\" className=\"img-registration\" />\n                    </div>\n                    <div className=\"aside aside-2\">\n                        <h3 className=\"title\">CREATE AN EVENT</h3>\n                        <p className=\"registration-p\">Share the relevant information about your event.</p>\n                    </div>\n                </div>\n\n                <div className=\"squares square-3 box fade-in\">\n                    <div className=\"img-1\">\n                        <img src={Publish} alt=\"publish an event\" className=\"img-registration\" />\n                    </div>\n                    <div className=\"aside aside-3\">\n                        <h3 className=\"title\">AND PUBLISH IT!</h3>\n                        <p className=\"registration-p\">One click and that's it. Easy peasy! </p>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"buttons-container\">\n                <Link to='/signup' className=\"button signup-button\">Sign up</Link>\n                <Link to='/login' className=\"button login-button\">Login</Link>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Registration\n\n\n\n\n\n\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport '../style/EventCard.scss';\nimport Context from './Context';\n\nconst EventCard = ({ el, setIsEventClicked }) => {\n\n    const { setEventInfo } = useContext(Context);\n\n    // console.log('THIS IS THE EVENT INFO: ', el);\n\n    if (new Date(el.date).getTime() > new Date().getTime()) {\n\n        return (\n            <div className=\"event-card scale-in-center\">\n                {\n                    el &&\n                    <div className=\"event-image to-back\" style={{ backgroundImage: `url('http://localhost:4000${el.imgUrl}')` }} alt=\"test-image\" />\n                }\n                <h3 className=\"event-title to-back\">{el.title}</h3>\n                <p className=\"event-date to-back\" >Date <span style={{ color: '#256eac' }}>{el.date}</span></p>\n                <p className=\"event-time to-back\" >Time <span style={{ color: '#256eac' }}>{el.time}</span></p>\n                <p className=\"event-address to-back\">{el.location}</p>\n                <button onClick={() => {\n                    setEventInfo(el);\n                    localStorage.setItem('event-info', JSON.stringify(el));\n                    setIsEventClicked(true);\n                }} className=\"button see-more\">See more</button>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"event-card scale-in-center passed-event\">\n                {\n                    el &&\n                    <div className=\"event-image to-back\" style={{ backgroundImage: `url('http://localhost:4000${el.imgUrl}')` }} alt=\"test-image\" />\n                }\n                <h3 className=\"event-title to-back\">{el.title}</h3>\n                <p className=\"event-date to-back\" >Date <span style={{ color: '#256eac' }}>{el.date}</span></p>\n                <p className=\"event-time to-back\" >Time <span style={{ color: '#256eac' }}>{el.time}</span></p>\n                <p className=\"event-address to-back\">{el.location}</p>\n                <button onClick={() => {\n                    setEventInfo(el);\n                    localStorage.setItem('event-info', JSON.stringify(el));\n                    setIsEventClicked(true);\n                }} className=\"button see-more passed-button\">See more</button>\n            </div>\n        )\n    }\n}\n\nexport default EventCard;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport Context from './Context';\nimport { useHistory } from 'react-router-dom';\nimport '../style/Events.scss';\nimport EventCard from './EventCard';\nimport ParticlesBg from 'particles-bg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport ScrollToTop from \"react-scroll-to-top\"\n\nconst Events = () => {\n    const history = useHistory();\n\n    const { meetups, meetupsCities, workshops, workshopsCities, conventions, conventionsCities } = useContext(Context);\n\n    // number of events that will show after clicking on 'SEE MORE':\n    const [isVisible, setIsVisible] = useState(9);\n    const [isEventClicked, setIsEventClicked] = useState(false);\n    const [eventType, setEventType] = useState('');\n    const [selectedCity, setSelectedCity] = useState('');\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        setEventType('meetups')\n    }, [])\n\n    const loadMore = () => {\n        setIsVisible(isVisible + 9);\n    };\n\n    useEffect(() => {\n        setSelectedCity('disabled')\n    }, [eventType]);\n\n    // by clicking on 'SEE MORE' it will be redirected to the event's info\n    useEffect(() => {\n        isEventClicked && history.push('/event');\n    });\n\n    // console.log('SELECTED CITY: ', selectedCity);\n    // console.log('WORKSHOPS: ', workshops);\n\n    return (\n        <div className=\"events-container space-navbar\">\n            <ParticlesBg color=\"#8d8d8d\" num={50} type=\"cobweb\" bg={true} />\n            <ScrollToTop smooth top=\"700\" />\n            <div className=\"event-types\">\n                <h2 className=\"underline\" style={{ color: eventType === 'meetups' ? '#256eac' : null }} onClick={() => setEventType('meetups')}>Meetups</h2>\n                <h2 className=\"underline\" style={{ color: eventType === 'workshops' ? '#256eac' : null }} onClick={() => setEventType('workshops')}>Workshops</h2>\n                <h2 className=\"underline\" style={{ color: eventType === 'conventions' ? '#256eac' : null }} onClick={() => setEventType('conventions')}>Conventions</h2>\n\n                {\n                    meetups && workshops && conventions ?\n                        <select className=\"checkout\" onClick={(e) => setSelectedCity(e.target.value)}>\n                            <option value=\"disabled\" selected={selectedCity === 'disabled' && true} disabled>Select city</option>\n                            {\n                                eventType === 'meetups' ?\n                                    meetupsCities.map((city, i) => <option key={i} value={city}>{city}</option>)\n                                    : eventType === 'workshops' ?\n                                        workshopsCities.map((city, i) => <option key={i} value={city}>{city}</option>)\n                                        :\n                                        conventionsCities.map((city, i) => <option key={i} value={city}>{city}</option>)\n\n                            }\n                        </select>\n                        :\n                        null\n                }\n            </div>\n            <div className=\"pool-event\">\n                {\n                    meetups && workshops && conventions ?\n                        <Fragment>\n                            {\n                                selectedCity !== 'disabled' ?\n                                    <Fragment>\n                                        {\n                                            eventType === 'meetups' ?\n                                                meetups.filter(meetup => meetup.city === selectedCity).slice(0, isVisible).map((el, i) => <EventCard key={i} el={el} setIsEventClicked={setIsEventClicked} />)\n                                                : eventType === 'workshops' ?\n                                                    workshops.filter(workshop => workshop.city === selectedCity).filter(workshop => workshop.city === selectedCity).slice(0, isVisible).map((el, i) => <EventCard key={i} el={el} setIsEventClicked={setIsEventClicked} />)\n                                                    : eventType === 'conventions' ?\n                                                        conventions.filter(convention => convention.city === selectedCity).slice(0, isVisible).map((el, i) => <EventCard key={i} el={el} setIsEventClicked={setIsEventClicked} />)\n                                                        : null\n                                        }\n                                    </Fragment>\n                                    :\n                                    <div className=\"find-city\" >\n                                        <p className=\"slide-from-left\">Please, select a city to find</p>\n                                        <p className=\"find-event-type slide-from-right\">{eventType}</p>\n                                    </div>\n                            }\n                        </Fragment>\n                        :\n                        <div className=\"loading-message\">\n                            <p><FontAwesomeIcon icon={faSpinner} spin style={{ color: \"rgb(37, 110, 172)\" }} /> Loading...</p>\n                        </div>\n                }\n            </div>\n            {\n                meetups && workshops && conventions ?\n                    <Fragment>\n                        {\n                            eventType === 'meetups' && isVisible >= meetups.filter(meetup => meetup.city === selectedCity).length ?\n                                null :\n                                eventType === 'workshops' && isVisible >= workshops.filter(workshop => workshop.city === selectedCity).length ?\n                                    null :\n                                    eventType === 'conventions' && isVisible >= conventions.filter(convention => convention.city === selectedCity).length ?\n                                        null :\n                                        <button className=\"button load-more\" onClick={loadMore}>Load more</button>\n                        }\n                    </Fragment>\n                    :\n                    null\n            }\n\n        </div >\n    );\n}\n\nexport default Events;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from './Context';\n\nimport '../style/SignUp.scss';\nimport ParticlesBg from 'particles-bg';\n\n\nconst SignUp = () => {\n    const history = useHistory();\n    const { userData, setUserData, setToken, loggedIn, setLoggedIn } = useContext(Context);\n\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [website, setWebsite] = useState('');\n    const [typeOfUser, setTypeOfUser] = useState('developer');\n    const [avatar, setAvatar] = useState('');\n\n    // set a status for what happens after sign up \n    // const [isSignedUp, setIsSignedUp] = useState(false);\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n    const avatars = [\n        'https://joeschmoe.io/api/v1/jeri',\n        'https://joeschmoe.io/api/v1/jess',\n        'https://joeschmoe.io/api/v1/jana',\n        'https://joeschmoe.io/api/v1/james',\n        'https://joeschmoe.io/api/v1/joe',\n        'https://joeschmoe.io/api/v1/julie',\n    ];\n\n    const handleSignUp = async (e) => {\n        e.preventDefault();\n\n        const signUpData = {\n            name,\n            email,\n            avatar,\n            password,\n            website\n        }\n\n        const userData = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(signUpData)\n\n        }\n        const resp = await fetch('/users', userData);\n        const header = resp.headers.get('x-auth');\n        const data = await resp.json();\n\n        console.log(\"res:\", data);\n\n        if (data.success) {\n            localStorage.setItem('token', header);\n            setToken(header);\n            setUserData(data.user)\n            setLoggedIn(true)\n        }\n    };\n\n    useEffect(() => {\n        loggedIn && history.push('/account')\n    })\n\n    return (\n        <div className=\"signup-container space-navbar\">\n            <ParticlesBg color=\"#8d8d8d\" num={50} type=\"cobweb\" bg={true} />\n\n            <form className=\"signup-form puff-in-center\" onSubmit={handleSignUp}>\n                <h2 className=\"h2-signup\">SIGN UP</h2>\n                <label className=\"signup-label\"> Are you\n                    <select id={name} className=\"signup-select\" onChange={(e) => setTypeOfUser(e.currentTarget.value)} >\n                        <option className=\"signup-opt\" value=\"developer\" selected>Developer</option>\n                        <option className=\"signup-opt\" value=\"organization\">Organization</option>\n                    </select>\n                </label>\n                <label className=\"signup-label\">\n                    {\n                        typeOfUser === 'developer' ?\n                            'Name *'\n                            :\n                            'Organization\\'s name *'\n                    }\n                    {\n                        typeOfUser === 'developer' ?\n                            <input className=\"signup-input\"\n                                type=\"text\"\n                                placeholder=\"your name\"\n                                required\n                                onChange={(e) => setName(e.target.value)} />\n                            :\n                            <input className=\"signup-input\"\n                                type=\"text\"\n                                placeholder=\"the organization's name\"\n                                required\n                                onChange={(e) => setName(e.target.value)} />\n                    }\n                </label>\n                {\n                    typeOfUser === 'developer' ?\n                        <p className=\"signup-label\">Choose your avatar</p>\n                        :\n                        null\n                }\n\n                {\n                    typeOfUser === 'developer' ?\n                        <div className=\"avatar-container\">\n                            {\n                                avatars.map((avatar, i) => {\n                                    return (\n                                        <div key={i} >\n                                            <input\n                                                type=\"radio\"\n                                                id={i}\n                                                name='avatar'\n                                                value={avatars[i]}\n                                                required\n                                                onChange={(e) => setAvatar(e.currentTarget.value)} />\n                                            <label htmlFor={i}><img src={avatar} className=\"avatar\" alt={avatar.slice(28)} /></label>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        :\n                        null\n                }\n\n                <label className=\"signup-label\">Email *\n                    {\n                        typeOfUser === 'developer' ?\n                            <input\n                                className=\"signup-input\"\n                                type=\"email\"\n                                value={email}\n                                placeholder=\"your email\"\n                                required\n                                onChange={(e) => setEmail(e.target.value)} />\n                            :\n                            <input\n                                className=\"signup-input\"\n                                type=\"email\"\n                                value={email}\n                                placeholder=\"the organization email\"\n                                required\n                                onChange={(e) => setEmail(e.target.value)} />\n                    }\n                </label>\n                {\n                    typeOfUser === 'developer' ?\n                        null\n                        :\n\n                        <label className=\"signup-label\">Website\n                        <input\n                                className=\"signup-input\"\n                                type=\"url\"\n                                value={website}\n                                placeholder=\"the url of the website \"\n                                onChange={(e) => setWebsite(e.target.value)} />\n                        </label>\n                }\n\n                <label className=\"signup-label\">Password *\n                        <input\n                        className=\"signup-input\"\n                        type=\"password\"\n                        value={password}\n                        placeholder=\"your password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)} />\n                </label>\n                <h5 className=\"h5-signup\"> * Required fields </h5>\n                <button\n                    type=\"submit\"\n                    className=\"button sign-btn\">CREATE ACCOUNT</button>\n            </form>\n        </div>\n    )\n}\nexport default SignUp;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport '../style/Footer.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle, faPaperPlane, faSearch } from '@fortawesome/free-solid-svg-icons';\n\nexport default function Footer() {\n    return (\n        <footer className=\"footer-container space-navbar\">\n            <div className=\"footer\">&copy;Devents2020</div>\n            <div className=\"footer\"></div>\n            <div className=\"footer\">\n                <Link to=\"/faq\"><FontAwesomeIcon className=\"icon\" title=\"Faq\" icon={faQuestionCircle} /></Link>\n                <Link to=\"/contact\"><FontAwesomeIcon className=\"icon\" title=\"Contact Us\" icon={faPaperPlane} /></Link>\n                {/* <FontAwesomeIcon className=\"icon section\" icon={faSearch} /> */}\n            </div>\n        </footer>\n    )\n}\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport Context from './Context';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport '../style/Account.scss';\nimport EventCard from './EventCard';\nimport ParticlesBg from 'particles-bg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as faFullHeart } from '@fortawesome/free-solid-svg-icons';\n\n\nconst Account = () => {\n    const history = useHistory();\n\n    const { setLoggedIn, getUserData, userData, setUserData, setEventInfo, token } = useContext(Context);\n\n    const [isEventClicked, setIsEventClicked] = useState(false);\n    // this state change fragment between info and inputs to be edited\n    const [editInfo, setEditInfo] = useState(false);\n    // this will be the new info inserted by the user:\n    const [newName, setNewName] = useState('');\n    const [newEmail, setNewEmail] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [newAvatar, setNewAvatar] = useState('');\n\n    const [isAccountDeleted, setIsAccountDeleted] = useState(false);\n\n\n    const listOfAvatars = [\n        'https://joeschmoe.io/api/v1/jeri',\n        'https://joeschmoe.io/api/v1/jess',\n        'https://joeschmoe.io/api/v1/jana',\n        'https://joeschmoe.io/api/v1/james',\n        'https://joeschmoe.io/api/v1/joe',\n        'https://joeschmoe.io/api/v1/julie',\n    ];\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        getUserData();\n    }, []);\n\n    const [refresh, setRefresh] = useState(true);\n    useEffect(() => {\n        getUserData();\n        setRefresh(false)\n    }, [refresh]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // old data:\n        const { name, email, password, avatar, events, favoriteMeetups, favoriteWorkshops, favoriteConventions } = userData;\n\n        const newInfo = {\n            name: newName === '' ? name : newName,\n            email: newEmail === '' ? email : newEmail,\n            avatar: newAvatar === '' ? avatar : newAvatar,\n            events: events,\n            favoriteMeetups: favoriteMeetups,\n            favoriteWorkshops: favoriteWorkshops,\n            favoriteConventions: favoriteConventions\n        };\n\n        const newInfoAndPassword = {\n            name: newName === '' ? name : newName,\n            email: newEmail === '' ? email : newEmail,\n            password: newPassword,\n            avatar: newAvatar === '' ? avatar : newAvatar,\n            events: events,\n            favoriteMeetups: favoriteMeetups,\n            favoriteWorkshops: favoriteWorkshops,\n            favoriteConventions: favoriteConventions\n        };\n        // console.log('NEW INFO: ', newInfo);\n\n        const newUserData = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-auth\": token\n            },\n            body: JSON.stringify(newPassword === '' ? newInfo : newInfoAndPassword)\n        };\n\n        const response = await fetch('/users', newUserData);\n        const data = await response.json();\n        // console.log(\"ACCOUNT response:\", data);\n        if (data.success) {\n            setUserData(data.user);\n            setEditInfo(false);\n        };\n    };\n\n    const deleteAccount = async (e) => {\n        e.preventDefault();\n\n        const deletedUser = {\n            method: \"DELETE\",\n            headers: {\n                \"x-auth\": token,\n                \"eventId\": userData._id\n            },\n        };\n\n        const request = await fetch('/users', deletedUser);\n        const response = await request.json();\n        // console.log('User Deleted - Response: ', response);\n        if (response.success) {\n            setIsAccountDeleted(true);\n            setLoggedIn(false);\n        };\n    };\n\n    // by clicking on 'SEE MORE' it will be redirected to the event's info\n    useEffect(() => {\n        isEventClicked && history.push('/event');\n        isAccountDeleted && history.push('/deletedaccount');\n    });\n\n    console.log('ACCOUNT_userData: ', userData);\n\n    return (\n        <div className=\"space-navbar account-container\">\n            <ParticlesBg color=\"#8d8d8d\" num={50} type=\"cobweb\" bg={true} />\n            <div className=\"personal-account slide-from-left\">\n                <h4><span>My information</span></h4>\n                <div className=\"image-frame\">\n                    <img className=\"profile-image\" src={userData && userData.avatar} alt=\"\" />\n                </div>\n\n                {\n                    editInfo ?\n                        <Fragment>\n                            <div className=\"personal-info\">\n                                <form onSubmit={handleSubmit} className=\"edit-form\">\n                                    <label htmlFor=\"name\" className=\"edit-label\">\n                                        <input type=\"text\" placeholder={userData && userData.name} onChange={(e) => setNewName(e.target.value)} />\n                                    </label>\n                                    <label htmlFor=\"email\" className=\"edit-label\">\n                                        <input type=\"email\" placeholder={userData && userData.email} onChange={(e) => setNewEmail(e.target.value)} />\n                                    </label>\n                                    <label htmlFor=\"password\" className=\"edit-label\">Change password?\n                                        <input type=\"password\" placeholder='new password' onChange={(e) => setNewPassword(e.target.value)} />\n                                    </label>\n                                    <p className=\"select-avatar\">Select your Avatar</p>\n                                    <div className=\"container-avatars\">\n                                        {\n                                            listOfAvatars.map((avatar, i) => {\n                                                return (\n                                                    <div key={i} className=\"avatar-box\">\n                                                        <input type=\"radio\" id={i} name='avatar' value={listOfAvatars[i]} onChange={(e) => setNewAvatar(e.target.value)} />\n                                                        <label htmlFor={i}> <img src={avatar} alt={avatar.slice(28)} style={{ height: '112px' }} /></label>\n                                                    </div>\n                                                )\n                                            })\n                                        }\n                                    </div>\n                                    <button type='submit' className=\"button save-button\" >Save</button>\n                                    <NavLink to=\"deletedaccount\" className=\"button delete-button button-margin\" onClick={(e) => {\n                                        if (window.confirm(`Dear ${userData.name}, \\n\\nplease note that the events you have created will remain on the website if you do not remove them before deleting your account. \\n\\nAre you sure you want to delete your account?`)) { localStorage.clear(); deleteAccount(e) }\n                                    }}>Delete Account\n                                         </NavLink>\n                                </form>\n                            </div>\n                        </Fragment>\n                        :\n                        <Fragment>\n                            <div className=\"personal-info\">\n                                <h4>{userData && userData.name}</h4>\n                                <p>{userData && userData.email}</p>\n                            </div>\n                            <button className=\"button\" onClick={() => setEditInfo(true)}>Edit information</button>\n                        </Fragment>\n                }\n\n            </div>\n            <div className=\"personal-events slide-from-right\">\n                <h4><span>My own events</span></h4>\n                <div className=\"events-container\">\n                    {\n                        userData &&\n                            userData.events &&\n                            userData.events.length ?\n                            userData.events.map((el, i) => <EventCard key={i} setIsEventClicked={setIsEventClicked} setEventInfo={setEventInfo} el={el} />)\n                            :\n                            <p className=\"no-events\">You didn't create any event yet</p>\n                    }\n                </div>\n                {\n                    userData &&\n                        userData.favoriteMeetups &&\n                        userData.favoriteMeetups.length ?\n                        <Fragment>\n                            <h4><FontAwesomeIcon className=\"full-star jello-horizontal\" icon={faFullHeart} /> <span>Meetups</span> I'm following</h4>\n                            <div className=\"events-container\">\n                                {\n                                    userData.favoriteMeetups.map((el, i) => <EventCard key={i} setIsEventClicked={setIsEventClicked} setEventInfo={setEventInfo} el={el} />)\n                                }\n                            </div>\n                        </Fragment>\n                        :\n                        null\n                }\n                {\n                    userData &&\n                        userData.favoriteWorkshops &&\n                        userData.favoriteWorkshops.length ?\n                        <Fragment>\n                            <h4><FontAwesomeIcon className=\"full-star jello-horizontal\" icon={faFullHeart} /> <span>Workshops</span> I'm following</h4>\n                            <div className=\"events-container\">\n                                {\n                                    userData.favoriteWorkshops.map((el, i) => <EventCard key={i} setIsEventClicked={setIsEventClicked} setEventInfo={setEventInfo} el={el} />)\n                                }\n                            </div>\n                        </Fragment>\n                        :\n                        null\n                }\n                {\n                    userData &&\n                        userData.favoriteConventions &&\n                        userData.favoriteConventions.length ?\n                        <Fragment>\n                            <h4><FontAwesomeIcon className=\"full-star jello-horizontal\" icon={faFullHeart} /> <span>Conventions</span> I'm following</h4>\n                            <div className=\"events-container\">\n                                {\n                                    userData.favoriteConventions.map((el, i) => <EventCard key={i} setIsEventClicked={setIsEventClicked} setEventInfo={setEventInfo} el={el} />)\n                                }\n                            </div>\n                        </Fragment>\n                        :\n                        null\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Account;\n","import React from 'react'\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\n\nconst googleApi = process.env.REACT_APP_GOOGLE_API_KEY;\n\nGeocode.setApiKey(googleApi);\nGeocode.enableDebug();\n\nclass Map extends React.Component {\n    constructor(props) {\n        super(props);\n        // console.log('GOOGLE PROPS:', this.props);\n        this.state = {\n            address: '',\n            city: '',\n            area: '',\n            state: '',\n            mapPosition: {\n                lat: this.props.center.lat,\n                lng: this.props.center.lng\n            },\n            markerPosition: {\n                lat: this.props.center.lat,\n                lng: this.props.center.lng\n            }\n        }\n    }\n    /**\n      * Get the current address from the default map position and set those values in the state\n      */\n    componentDidMount() {\n        Geocode.fromLatLng(this.state.mapPosition.lat, this.state.mapPosition.lng).then(\n            response => {\n                const address = response.results[0].formatted_address,\n                    addressArray = response.results[0].address_components,\n                    city = this.getCity(addressArray),\n                    area = this.getArea(addressArray),\n                    state = this.getState(addressArray);\n\n                // console.log('city', city, area, state);\n\n                this.setState({\n                    address: (address) ? address : '',\n                    area: (area) ? area : '',\n                    city: (city) ? city : '',\n                    state: (state) ? state : '',\n                })\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    };\n    /**\n      * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n      *\n      * @param nextProps\n      * @param nextState\n      * @return {boolean}\n      */\n    shouldComponentUpdate(nextProps, nextState) {\n        if (\n            this.state.markerPosition.lat !== this.props.center.lat ||\n            this.state.address !== nextState.address ||\n            this.state.city !== nextState.city ||\n            this.state.area !== nextState.area ||\n            this.state.state !== nextState.state\n        ) {\n            return true\n        } else if (this.props.center.lat === nextProps.center.lat) {\n            return false\n        }\n    }\n    /**\n      * Get the city and set the city input value to the one selected\n      *\n      * @param addressArray\n      * @return {string}\n      */\n    getCity = (addressArray) => {\n        let city = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\n                city = addressArray[i].long_name;\n                return city;\n            }\n        }\n    };\n    /**\n      * Get the area and set the area input value to the one selected\n      *\n      * @param addressArray\n      * @return {string}\n      */\n    getArea = (addressArray) => {\n        let area = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            if (addressArray[i].types[0]) {\n                for (let j = 0; j < addressArray[i].types.length; j++) {\n                    if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n                        area = addressArray[i].long_name;\n                        return area;\n                    }\n                }\n            }\n        }\n    };\n    /**\n      * Get the address and set the address input value to the one selected\n      *\n      * @param addressArray\n      * @return {string}\n      */\n    getState = (addressArray) => {\n        let state = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            for (let i = 0; i < addressArray.length; i++) {\n                if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n                    state = addressArray[i].long_name;\n                    return state;\n                }\n            }\n        }\n    };\n    /**\n      * And function for city,state and address input\n      * @param event\n      */\n    onChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n    /**\n      * This Event triggers when the marker window is closed\n      *\n      * @param event\n      */\n    onInfoWindowClose = (event) => {\n    };\n    /**\n      * When the user types an address in the search box\n      * @param place\n      */\n    onPlaceSelected = (place) => {\n        const address = place.formatted_address,\n            addressArray = place.address_components,\n            city = this.getCity(addressArray),\n            area = this.getArea(addressArray),\n            state = this.getState(addressArray),\n            latValue = place.geometry.location.lat(),\n            lngValue = place.geometry.location.lng();\n        // Set these values in the state.\n        this.setState({\n            address: (address) ? address : '',\n            area: (area) ? area : '',\n            city: (city) ? city : '',\n            state: (state) ? state : '',\n            markerPosition: {\n                lat: latValue,\n                lng: lngValue\n            },\n            mapPosition: {\n                lat: latValue,\n                lng: lngValue\n            },\n        })\n    };\n    /**\n      * When the marker is dragged you get the lat and long using the functions available from event object.\n      * Use geocode to get the address, city, area and state from the lat and lng positions.\n      * And then set those values in the state.\n      *\n      * @param event\n      */\n    onMarkerDragEnd = (event) => {\n        // console.log('event', event);\n        let newLat = event.latLng.lat(),\n            newLng = event.latLng.lng(),\n            addressArray = [];\n        Geocode.fromLatLng(newLat, newLng).then(\n            response => {\n                const address = response.results[0].formatted_address,\n                    addressArray = response.results[0].address_components,\n                    city = this.getCity(addressArray),\n                    area = this.getArea(addressArray),\n                    state = this.getState(addressArray);\n                this.setState({\n                    address: (address) ? address : '',\n                    area: (area) ? area : '',\n                    city: (city) ? city : '',\n                    state: (state) ? state : ''\n                })\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    };\n    render() {\n        const AsyncMap = withScriptjs(\n            withGoogleMap(\n                props => (\n                    <GoogleMap google={this.props.google}\n                        defaultZoom={this.props.zoom}\n                        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n                    >\n                        {/*Marker*/}\n                        <Marker google={this.props.google}\n                            draggable={false}\n                            onDragEnd={this.onMarkerDragEnd}\n                            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n                        />\n                        <Marker />\n                        {/* InfoWindow on top of marker */}\n                        <InfoWindow\n                            onClose={this.onInfoWindowClose}\n                            position={{ lat: (this.state.markerPosition.lat + 0.001), lng: this.state.markerPosition.lng }}\n                        >\n                            <div>\n                                <span style={{ padding: 0, margin: 0 }}>{this.state.address}</span>\n                            </div>\n                        </InfoWindow>\n                    </GoogleMap>\n                )\n            )\n        );\n        let map;\n        if (this.props.center.lat !== undefined) {\n            map = <div>\n                {/* <div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"\">City</label>\n                        <input type=\"text\" name=\"city\" className=\"form-control\" onChange={this.onChange} readOnly=\"readOnly\" value={this.state.city} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"\">Area</label>\n                        <input type=\"text\" name=\"area\" className=\"form-control\" onChange={this.onChange} readOnly=\"readOnly\" value={this.state.area} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"\">State</label>\n                        <input type=\"text\" name=\"state\" className=\"form-control\" onChange={this.onChange} readOnly=\"readOnly\" value={this.state.state} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"\">Address</label>\n                        <input type=\"text\" name=\"address\" className=\"form-control\" onChange={this.onChange} readOnly=\"readOnly\" value={this.state.address} />\n                    </div> \n            </div>*/}\n                <AsyncMap\n                    googleMapURL={googleApi}\n                    loadingElement={\n                        <div style={{ height: `100%` }} />\n                    }\n                    containerElement={\n                        <div style={{ height: this.props.height }} />\n                    }\n                    mapElement={\n                        <div style={{ height: `100%` }} />\n                    }\n                />\n            </div>\n        } else {\n            map = <div style={{ height: this.props.height }} />\n        }\n        return (map)\n    }\n}\nexport default Map","import React from 'react';\nimport GooglePlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\n\nconst GoogleMapsAutocomplete = ({ isRequired, setLocation, setCoordinates, setLat, setLng }) => {\n\n    const getCoordinates = (address) => {\n        geocodeByAddress(address)\n            .then(results => getLatLng(results[0]))\n            .then((data) => {\n                // console.log('LAT: ', data.lat);\n                // console.log('LNG: ', data.lng);\n                setCoordinates(data)\n                return (data)\n            }).then(res => {\n                // console.log('RES:LAT', res.lat);\n                // console.log('RES:LNG', res.lng);\n                setLat(res.lat);\n                setLng(res.lng)\n            })\n    };\n\n    return (\n        <div>\n            <GooglePlacesAutocomplete\n                inputClassName={'location-container event-input map-address'}\n                onSelect={(input) => { console.log(input); getCoordinates(input.description); setLocation(input.description) }}\n                placeholder={'the event\\'s location'}\n                required={isRequired}\n            />\n        </div>\n    )\n};\n\nexport default GoogleMapsAutocomplete;","import React, { useContext, Fragment, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from './Context';\nimport '../style/EventInformation.scss';\nimport ParticlesBg from 'particles-bg';\nimport Map from './Map';\nimport GoogleMapsAutocomplete from './GoogleMapsAutocomplete';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt, faHeart as faFullHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faHeart } from '@fortawesome/free-regular-svg-icons';\nimport { FacebookShareButton, FacebookIcon, TwitterShareButton, TwitterIcon } from \"react-share\";\nimport Moment from 'moment';\n\n\nconst EventInformation = (props) => {\n    const history = useHistory();\n\n    const { lat, setLat, lng, setLng, unfilteredMeetups, setMeetups, eventInfo, setEventInfo, userData, setUserData, token } = useContext(Context);\n\n    // By clicking on EDIT:\n    const [editMode, setEditMode] = useState(false);\n    const [newDate, setNewDate] = useState('');\n    const [newTime, setNewTime] = useState('');\n    const [newTitle, setNewTitle] = useState('');\n    const [newDescription, setNewDescription] = useState('');\n    const [newLocation, setNewLocation] = useState('');\n    const [newCoordinates, setNewCoordinates] = useState('');\n\n    const [likedEvent, setLikedEvent] = useState(false);\n\n    useEffect(() => {\n\n        window.scrollTo(0, 0);\n\n        const event = localStorage.getItem('event-info');\n        if (event) {\n            setEventInfo(JSON.parse(event));\n        }\n    }, []);\n\n    useEffect(() => {\n        if (userData && userData.favoriteMeetups.filter(meetup => meetup._id === eventInfo._id).length > 0 ||\n            userData && userData.favoriteWorkshops.filter(workshop => workshop._id === eventInfo._id).length > 0 ||\n            userData && userData.favoriteConventions.filter(convention => convention._id === eventInfo._id).length > 0) {\n            setLikedEvent(true);\n        }\n    });\n\n    const deleteEvent = async (e) => {\n        e.preventDefault();\n\n        const eventToDelete = unfilteredMeetups.filter(meetup => meetup._id === eventInfo._id)[0];\n        // console.log('EVENT TO DELETE', eventToDelete);\n        const deletedEvent = {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-auth\": token\n            },\n            body: JSON.stringify(eventToDelete)\n        };\n\n        const request = await fetch('/events', deletedEvent);\n        const response = await request.json();\n        // console.log('EVent Deleted - Response: ', response);\n        if (response.success) {\n            setMeetups(response.event);\n            setEditMode(false);\n            localStorage.removeItem('event-info');\n            setIsEventDeleted(true);\n        };\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        // console.log('NEW COORDINATES: ', newCoordinates);\n\n        const newInfo = {\n            date: newDate === '' ? eventInfo.date : new Moment(newDate).format('DD MMMM YYYY'),\n            time: newTime === '' ? eventInfo.time : newTime.includes('M') ? newTime : newTime + ' H.',\n            title: newTitle === '' ? eventInfo.title : newTitle,\n            description: newDescription === '' ? eventInfo.description : newDescription,\n            location: newLocation === '' ? eventInfo.location : newLocation,\n            coordinates: newCoordinates === '' ? eventInfo.coordinates : JSON.stringify(newCoordinates),\n            _id: eventInfo._id,\n            lat: JSON.stringify(newCoordinates) === '' ? lat : newCoordinates.lat,\n            lng: JSON.stringify(newCoordinates) === '' ? lng : newCoordinates.lng\n        };\n\n        // console.log('NEW INFO: ', newInfo);\n\n        const newEventInfo = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-auth\": token\n            },\n            body: JSON.stringify(newInfo)\n        };\n\n        const request = await fetch('/events', newEventInfo);\n        const response = await request.json();\n        // console.log('EVent infoRmAtioN - Response: ', response);\n        if (response.success) {\n            setEventInfo(response.event);\n            localStorage.setItem('event-info', JSON.stringify(response.event));\n            setEditMode(false);\n        };\n    };\n\n\n    const [isEventDeleted, setIsEventDeleted] = useState(false);\n    useEffect(() => {\n        isEventDeleted && history.push('/account');\n    });\n\n\n    const handleFavorite = async () => {\n        const eventId = eventInfo._id;\n\n        const newFavoriteEvent = {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-auth\": token\n            }\n        };\n\n        const request = await fetch(`/users/${eventId}`, newFavoriteEvent);\n        const response = await request.json();\n        console.log('Event added to favorites - Response: ', response);\n        if (response.success) {\n            setUserData(response.user)\n            setLikedEvent(response.star);\n        };\n    };\n\n\n    // console.log('INFORMATION EVENT: ', eventInfo);\n    // console.log('USER DATA: ', userData);\n    // console.log('EVENT INFO AUTHOR-ID: ', eventInfo.authorId);\n    // console.log('EVENT INFO AUTHOR-ID = USER DATA ID ? ', userData._id === eventInfo.authorId);\n\n\n    return (\n\n        <div className=\"space-navbar\">\n            <ParticlesBg color=\"#8d8d8d\" num={50} type=\"cobweb\" bg={true} />\n            <div className=\"event-information-container\">\n\n                {\n                    eventInfo ?\n\n                        <Fragment>\n                            {\n                                userData && eventInfo && userData._id === eventInfo.authorId ?\n\n                                    <Fragment>\n\n                                        {\n                                            editMode ?\n\n                                                <form onSubmit={handleSubmit} className=\"event-information-container edit-form\">\n                                                    <label htmlFor=\"date\" className=\"edit-label event-information-date\">Date\n                                            <input type=\"date\" placeholder={eventInfo && eventInfo.date} onChange={(e) => setNewDate(e.target.value)} />\n                                                    </label>\n                                                    <label htmlFor=\"time\" className=\"edit-label event-information-time\">Time\n                                            <input type=\"time\" placeholder={eventInfo && eventInfo.time} onChange={(e) => setNewTime(e.target.value)} />\n                                                    </label>\n                                                    <label htmlFor=\"title\" className=\"edit-label event-information-title\">Title\n                                            <input type=\"text\" placeholder={eventInfo && eventInfo.title} onChange={(e) => setNewTitle(e.target.value)} />\n                                                    </label>\n                                                    <div className=\"event-information-box-one\">\n                                                        {\n                                                            eventInfo.imgUrl && eventInfo.imgUrl.includes('http') ?\n                                                                <img className=\"event-information-image\" src={eventInfo.imgUrl} alt=\"event-image\" />\n                                                                :\n                                                                <img className=\"event-information-image\" src={`${eventInfo.imgUrl}`} alt=\"event-image\" />\n                                                        }\n                                                    </div>\n                                                    <div className=\"event-information-box-two\">\n                                                        <label htmlFor=\"description\" className=\"edit-label event-information-description\">Description\n                                                <textarea type=\"text\" placeholder={eventInfo && eventInfo.description} onChange={(e) => setNewDescription(e.target.value)} />\n                                                        </label>\n                                                    </div>\n                                                    <div className=\"google-map\">\n                                                        <label className=\"event-information-location\">Location\n                                                <GoogleMapsAutocomplete isRequired={false} setLocation={setNewLocation} setCoordinates={setNewCoordinates} setLat={setLat} setLng={setLng} />\n                                                        </label>\n                                                        {\n                                                            eventInfo ?\n                                                                <Map\n                                                                    google={props.google}\n                                                                    center={{ lat: eventInfo.lat, lng: eventInfo.lng }}\n                                                                    height='350px'\n                                                                    width='1000px'\n                                                                    zoom={15}\n                                                                />\n                                                                : null\n                                                        }\n                                                    </div>\n                                                    <button type=\"submit\" className=\"button link-to-site save-button\">SAVE</button>\n                                                </form>\n\n                                                :\n\n                                                <Fragment>\n                                                    <p className=\"event-information-date\">Date: <strong>{eventInfo.date}</strong></p>\n                                                    <p className=\"event-information-time\">Time: <strong>{eventInfo.time}</strong></p>\n                                                    <h2 className=\"event-information-title\">{eventInfo.title}</h2>\n                                                    <div className=\"event-information-box-one\">\n                                                        {\n                                                            eventInfo.imgUrl && eventInfo.imgUrl.includes('http') ?\n                                                                <img className=\"event-information-image\" src={eventInfo.imgUrl} alt=\"event-image\" />\n                                                                :\n                                                                <img className=\"event-information-image\" src={eventInfo.imgUrl ? `${eventInfo.imgUrl}` : `${eventInfo.imgUrlUrl}`} alt=\"event-image\" />\n                                                        }\n                                                        <div className=\"editing-buttons\">\n                                                            <button className=\"button link-to-site\" onClick={() => { setEditMode(true); localStorage.removeItem('event-info') }}>EDIT</button>\n                                                            <button className=\"button link-to-site delete-button\" onClick={(e) => { if (window.confirm('Are you sure you want to delete this event?')) { deleteEvent(e) } }}>DELETE</button>\n                                                        </div>\n                                                        <div className=\"share-buttons\">\n                                                            <FacebookShareButton\n                                                                url={window.location.href}\n                                                                quote=\"Check out this event!\"\n                                                                hashtag=\"#whoscomingwith\">\n                                                                <FacebookIcon className=\"fb-icon\" size={40} />\n                                                            </FacebookShareButton>\n                                                            <TwitterShareButton\n                                                                url={window.location.href}\n                                                                quote=\"Check out this event!\"\n                                                                hashtag=\"#whoscomingwith\">\n                                                                <TwitterIcon className=\"fb-icon\" size={40} />\n                                                            </TwitterShareButton>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"event-information-box-two\">\n                                                        <p className=\"event-information-description\">{eventInfo.description}</p>\n                                                        <p className=\"event-information-location\">{eventInfo.address}</p>\n                                                    </div>\n                                                    <div className=\"google-map\">\n                                                        {\n                                                            eventInfo.location ?\n                                                                <p className=\"map-address\"><FontAwesomeIcon style={{ fontSize: '1.2rem' }} icon={faMapMarkerAlt} /> {eventInfo.location}</p>\n                                                                :\n                                                                null\n                                                        }\n                                                        {\n                                                            eventInfo ?\n                                                                <Map\n                                                                    google={props.google}\n                                                                    center={{ lat: eventInfo.lat, lng: eventInfo.lng }}\n                                                                    height='350px'\n                                                                    width='1000px'\n                                                                    zoom={15}\n                                                                />\n                                                                : null\n                                                        }\n                                                    </div>\n                                                </Fragment>\n                                        }\n\n                                    </Fragment>\n\n                                    : userData && eventInfo && token && userData._id !== eventInfo.authorId ?\n\n                                        <Fragment>\n                                            {\n                                                likedEvent ?\n                                                    <div className=\"add-to-favorite\">\n                                                        <FontAwesomeIcon onClick={handleFavorite} className=\"full-star jello-horizontal\" icon={faFullHeart} />\n                                                    </div>\n                                                    :\n                                                    <div className=\"add-to-favorite\">\n                                                        <FontAwesomeIcon onClick={handleFavorite} className=\"star\" icon={faHeart} />\n                                                    </div>\n                                            }\n                                            <p className=\"event-information-date\">Date: <strong>{eventInfo.date}</strong></p>\n                                            <p className=\"event-information-time\">Time: <strong>{eventInfo.time.includes('M') ? eventInfo.time : eventInfo.time + ' H.'}</strong></p>\n                                            <h2 className=\"event-information-title\">{eventInfo.title}</h2>\n                                            <div className=\"event-information-box-one\">\n                                                {\n                                                    eventInfo.imgUrl && eventInfo.imgUrl.includes('http') ?\n                                                        <img className=\"event-information-image\" src={eventInfo.imgUrl} alt=\"event-image\" />\n                                                        :\n                                                        <img className=\"event-information-image\" src={eventInfo.imgUrl ? `${eventInfo.imgUrl}` : `${eventInfo.imgUrlUrl}`} alt=\"event-image\" />\n                                                }\n                                            </div>\n                                            <div className=\"event-information-box-two\">\n                                                <p className=\"event-information-description\">{eventInfo.description}</p>\n                                                <p className=\"event-information-location\">{eventInfo.address}</p>\n                                            </div>\n                                            <div className=\"google-map\">\n                                                {\n                                                    eventInfo.location ?\n                                                        <p className=\"map-address\"><FontAwesomeIcon style={{ fontSize: '1.2rem' }} icon={faMapMarkerAlt} /> {eventInfo.location}</p>\n                                                        :\n                                                        null\n                                                }\n                                                {\n                                                    eventInfo.coordinates ?\n                                                        <Map\n                                                            google={props.google}\n                                                            center={{ lat: eventInfo.lat, lng: eventInfo.lng }}\n                                                            height='350px'\n                                                            width='1000px'\n                                                            zoom={15}\n                                                        />\n                                                        : null\n                                                }\n                                            </div>\n                                        </Fragment>\n\n                                        :\n\n                                        <Fragment>\n                                            <p className=\"event-information-date\">Date: <strong>{eventInfo.date.includes('valid') ? 'More information following the link' : eventInfo.date}</strong></p>\n                                            <p className=\"event-information-time\">Time: <strong>{eventInfo.time.includes('valid') ? 'More information following the link' : eventInfo.time.includes('M') ? eventInfo.time : eventInfo.time + ' H.'}</strong></p>\n                                            <h2 className=\"event-information-title\">{eventInfo.title}</h2>\n                                            <div className=\"event-information-box-one\">\n                                                {\n                                                    eventInfo.imgUrl && eventInfo.imgUrl.includes('http') ?\n                                                        <img className=\"event-information-image\" src={eventInfo.imgUrl} alt=\"event-image\" />\n                                                        :\n                                                        <img className=\"event-information-image\" src={`${eventInfo.imgUrl}`} alt=\"event-image\" />\n                                                }\n                                                {\n                                                    eventInfo.url ?\n                                                        <a href={eventInfo.url} target='_blank' className=\"button link-to-site\" >GO TO EVENT</a>\n                                                        : null\n                                                }\n                                            </div>\n                                            <div className=\"event-information-box-two\">\n                                                <p className=\"event-information-description\">{eventInfo.description}</p>\n                                                <p className=\"event-information-location\">{eventInfo.address}</p>\n                                            </div>\n                                            <div className=\"google-map\">\n                                                {\n                                                    eventInfo.location ?\n                                                        <p className=\"map-address\"><FontAwesomeIcon style={{ fontSize: '1.2rem' }} icon={faMapMarkerAlt} /> {eventInfo.location}</p>\n                                                        :\n                                                        null\n                                                }\n                                                {\n                                                    eventInfo.coordinates ?\n                                                        <Map\n                                                            google={props.google}\n                                                            center={{ lat: eventInfo.lat, lng: eventInfo.lng }}\n                                                            height='350px'\n                                                            width='1000px'\n                                                            zoom={15}\n                                                        />\n                                                        : null\n                                                }\n                                            </div>\n                                        </Fragment>\n\n                            }\n\n                        </Fragment>\n\n                        :\n\n                        null\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default EventInformation;\n","import React, { useState, useEffect, useContext } from 'react';\nimport Context from './Context';\nimport { useHistory } from 'react-router-dom';\nimport '../style/CreateEvent.scss';\nimport ParticlesBg from 'particles-bg';\nimport axios from 'axios'\nimport Moment from 'moment'\nimport defaultImg from '../assets/img/eventImgDefault.png'\n\nimport GoogleMapsAutocomplete from './GoogleMapsAutocomplete';\n\nconst CreateEvent = (props) => {\n\n    const history = useHistory();\n    const { userData, setUserData, token, lat, lng, setLat, setLng } = useContext(Context);\n    // console.log('CREATE ACCOUNT_userData: ', userData)\n\n    // The followings are NOT base on the schema - Schema needs to be modified! \n    const [title, setTitle] = useState('');\n    const [hostedBy, setHostedBy] = useState('');\n    const [date, setDate] = useState('');\n    const [time, setTime] = useState('');\n    const [description, setDescription] = useState('');\n    const [url, setUrl] = useState('');\n    const [image, setImage] = useState('');\n\n    // this will be the complete address of the event as a STRING\n    const [location, setLocation] = useState('');\n\n    // console.log('IMAGE: ', image);\n\n    // this will be the location of the event as coordinates in an object: {lat: lat, lng: lng}\n    const [coordinates, setCoordinates] = useState('');\n\n    // route to events pages after event get published\n    const [statusAdded, setStatusAdded] = useState(false)\n\n    // console.log('LAT', lat);\n    // console.log('LNG', lng);\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n    const handleCreateEvent = async (e) => {\n        e.preventDefault();\n        // console.log(image)\n\n        const imgBody = new FormData();\n\n\n        imgBody.append('file', image);\n        imgBody.append('title', title);\n        imgBody.append('hostedBy', hostedBy);\n        imgBody.append('date', new Moment(date).format('DD MMMM YYYY'));\n        imgBody.append('time', time);\n        imgBody.append('coordinates', JSON.stringify(coordinates));\n        imgBody.append('lat', lat);\n        imgBody.append('lng', lng);\n        imgBody.append('location', location);\n        imgBody.append('website', url);\n\n        imgBody.append('description', description);\n        imgBody.append('_id', userData._id)\n\n        try {\n            // console.log('IMG BODY: ', imgBody);\n            const res = await axios.post('/events', imgBody, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                    'x-auth': token\n                }\n            });\n\n            if (res.status) {\n                // console.log('SERVER RESPONSE:', res)\n                setUserData(res.data.user)\n                setStatusAdded(true)\n            }\n\n        } catch (err) {\n            console.log(err)\n        }\n\n        // IMPORTANT: location is going to be an string. Examples:\n        // {\"lat\":52.4846517,\"lng\":13.4241349}\n        // {\"lat\":52.51160549999999,\"lng\":13.4702261}\n    }\n\n    useEffect(() => {\n        const script = document.createElement('script');\n\n        script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`;\n        script.async = true;\n\n        document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        }\n    }, []);\n\n    useEffect(() => {\n        statusAdded && history.push('/account');\n    })\n\n    return (\n        <div className=\"create-event-container\">\n            <ParticlesBg color=\"#8d8d8d\" num={55} type=\"cobweb\" bg={true} />\n\n            <form className=\"event-form space-navbar puff-in-center\" onSubmit={handleCreateEvent}>\n\n                <h2 className=\"h2-event\">CREATE EVENT</h2>\n                <label className=\"event-label\">Title *\n                    <input\n                        className=\"event-input\"\n                        type=\"text\"\n                        value={title}\n                        placeholder=\"the event title\"\n                        required\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                </label>\n                <label className=\"event-label\">Host by\n                    <input\n                        className=\"event-input\"\n                        type=\"text\"\n                        value={hostedBy}\n                        placeholder=\"the host name\"\n                        onChange={(e) => setHostedBy(e.target.value)}\n                    />\n                </label>\n                <div className=\"event-label inline\">\n                    <label className=\"inline-label\">Date *\n                        <input\n                            className=\"event-input\"\n                            type=\"date\"\n                            value={date}\n                            pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"\n                            required\n                            onChange={(e) => setDate(e.target.value)}\n                        />\n                    </label>\n                    <label className=\"space-top inline-label\">Time *\n                        <input\n                            className=\"event-input\"\n                            type=\"time\"\n                            value={time}\n                            required\n                            onChange={(e) => setTime(e.target.value)}\n                        />\n                    </label>\n                </div>\n                <label className=\"event-label\">Location *\n                    <GoogleMapsAutocomplete isRequired={true} setLocation={setLocation} setCoordinates={setCoordinates} setLat={setLat} setLng={setLng} />\n                </label>\n                <label className=\"event-label\">Website\n                    <input\n                        className=\"event-input\"\n                        type=\"url\"\n                        value={url}\n                        placeholder=\"the event website\"\n                        onChange={(e) => setUrl(e.target.value)}\n                    />\n                </label>\n                <label className=\"event-label img-label\"> Image (png, jpeg)\n                    <input\n                        type=\"file\"\n                        placeholder=\"only png or jpeg\"\n                        className=\"event-input img-file\"\n                        onChange={(e) => setImage(e.target.files[0])}\n                    />\n                </label>\n                <label className=\"event-label\">Description *\n                    <textarea cols=\"40\" rows=\"20\"\n                        className=\"event-textarea\"\n                        placeholder=\"the event details\"\n                        required\n                        onChange={(e) => setDescription(e.target.value)}\n                    />\n                </label>\n                <h5 className=\"h5-event\">* Required Fields</h5>\n                <button className=\"button event-btn\" type=\"submit\">PUBLISH EVENT</button>\n\n            </form>\n\n        </div>\n    )\n}\n\n\nexport default CreateEvent;\n","import React, { useState, useEffect } from 'react';\nimport '../style/Contact.scss';\nimport ParticlesBg from 'particles-bg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faEnvelope, faCommentDots, faSpinner, faCheckDouble } from '@fortawesome/free-solid-svg-icons';\n\nconst Contact = () => {\n    const [form, setForm] = useState(1);\n    const [userName, setUserName] = useState('');\n    const [userEmail, setUserEmail] = useState('');\n    const [userMessage, setUserMessage] = useState('');\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n        setForm(2);\n        const data = { userName, userEmail, userMessage };\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        };\n        fetch('/send-email', options)\n            .then(res => res.json())\n            .then(res1 => {\n                console.log(res1.status);\n                res1.status === true ? setForm(3) : alert('Sorry, there was an issue by sending your message. Please try again later.');\n            });\n    };\n\n    return (\n        <div className=\"contact-container space-navbar\">\n            <ParticlesBg color=\"#8d8d8d\" num={50} type=\"cobweb\" bg={true} />\n            {\n                form === 1 ?\n                    <form className=\"contact-form puff-in-center\" onSubmit={sendEmail}>\n                        <h2 className=\"h2-contact\">CONTACT US</h2>\n\n                        <label className=\"contact-label\">Name *\n                            <input\n                                className=\"contact-input\"\n                                type=\"text\"\n                                value={userName}\n                                placeholder=\"your name\"\n                                required\n                                onChange={(e) => setUserName(e.target.value)} />\n                        </label>\n                        <label className=\"contact-label\">Email *\n                            <input\n                                className=\"contact-input\"\n                                type=\"email\"\n                                value={userEmail}\n                                placeholder=\"your email\"\n                                required\n                                onChange={(e) => setUserEmail(e.target.value)} />\n                        </label>\n                        <label className=\"contact-label\">Message *\n                            <textarea rows=\"8\" cols=\"50\"\n                                className=\"contact-textarea\"\n                                type=\"text\"\n                                value={userMessage}\n                                placeholder=\"your message\"\n                                required\n                                onChange={(e) => setUserMessage(e.target.value)} />\n                        </label>\n                        <h5 className=\"h5-contact\"> * Required fields </h5>\n                        <button\n                            type=\"submit\"\n                            className=\"button sign-btn\">SEND MESSAGE</button>\n                    </form>\n                    : form === 2 ?\n                        <div className=\"loading-message\">\n                            <p><FontAwesomeIcon icon={faSpinner} spin style={{ color: \"rgb(37, 110, 172)\" }} /> Sending message...</p>\n                        </div>\n                        :\n                        <div className=\"thanks\">\n                            <p>Thank you for your message! <FontAwesomeIcon icon={faCheckDouble} style={{ color: \"rgb(0, 186, 211)\" }} /></p>\n                        </div>\n            }\n        </div>\n    )\n}\nexport default Contact;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\nimport '../style/Faq.scss';\nimport ParticlesBg from 'particles-bg';\n\nconst Faq = () => {\n\n    const scrollTop = () => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    return (\n        <div className=\"space-navbar faq-container\">\n            <ParticlesBg color=\"#8d8d8d\" num={50} type=\"cobweb\" bg={true} />\n            <div className=\"theme-list slide-from-left\">\n                <ul>\n                    <li><HashLink style={{ color: \"#256eac\", textDecoration: \"none\" }} to=\"/faq#whatisdevents\">What is DEVents?</HashLink></li>\n                    <li><HashLink style={{ color: \"#256eac\", textDecoration: \"none\" }} to=\"/faq#howtocreateevent\">How to create an event?</HashLink></li>\n                    <li><HashLink style={{ color: \"#256eac\", textDecoration: \"none\" }} to=\"/faq#howtocreateaccount\">How to create an account?</HashLink></li>\n                    <li><HashLink style={{ color: \"#256eac\", textDecoration: \"none\" }} to=\"/faq#editpersonalinfo\">Can I edit my personal info?</HashLink></li>\n                    <li><HashLink style={{ color: \"#256eac\", textDecoration: \"none\" }} to=\"/faq#doineedtopay\">Do I need to pay to post my event?</HashLink></li>\n                    <li><HashLink style={{ color: \"#256eac\", textDecoration: \"none\" }} to=\"/faq#findevents\">How to find an event?</HashLink></li>\n                    <li><HashLink style={{ color: \"#256eac\", textDecoration: \"none\" }} to=\"/faq#attendevents\">What if I want to attend an event?</HashLink></li>\n                </ul>\n            </div>\n            <div className=\"questions-container slide-from-right\">\n                <div className=\"questions-headline\">\n                    <h3>WE ARE HERE</h3>\n                    <h3>FOR ANY QUESTIONS</h3>\n                    <h3>YOU MIGHT HAVE</h3>\n                    <h5>IF YOU CAN'T FIND IT HERE, FEEL FREE TO <Link to=\"/contact\">CONTACT US</Link></h5>\n                </div>\n                <div className=\"questions\">\n                    <div id=\"whatisdevents\">\n                        <h4>WHAT IS DEVENTS?</h4>\n                        <p>\n                            DEVents is a web app created by and for web developers who are continuously looking for challenges as well as new ways to expand their knowledge. In DEVents you can find all happenings regarding web development (meetups, workshops or conventions) and also sign up and create your own meetups, projects or study groups.\n                        </p>\n                        <p>\n                            You won’t need to visit several websites to be aware of the last web development events. You’ll just need to enter in DEVents.\n                        </p>\n                        <h6 onClick={scrollTop}>Back to top</h6>\n                    </div>\n                    <div id=\"howtocreateevent\">\n                        <h4>HOW TO CREATE AN EVENT?</h4>\n                        <ol>\n                            <li>1. First of all you will need to create an account (take a look at the next question).</li>\n                            <li>2. Click on the top navigation bar on 'Add event'.</li>\n                            <li>3. Fill in all the required fields.</li>\n                            <li>4. Click on 'Publish event'.</li>\n                            <li>You will then find your event among all the meetups and also in your account.</li>\n                            <li><strong>* If you want to delete your event, you will find the button 'Delete' inside the event information.</strong></li>\n                        </ol>\n                        <h6 onClick={scrollTop}>Back to top</h6>\n                    </div>\n                    <div id=\"howtocreateaccount\">\n                        <h4>HOW TO CREATE AN ACCOUNT?</h4>\n                        <ol>\n                            <li>1. Click on the top navigation bar on 'Sign up'.</li>\n                            <li>2. Fill in all the required fields.</li>\n                            <li>3. Click on 'Create account'.</li>\n                            <li>You will be able to edit your personal information afterwards by clicking on 'Account' in the navigation bar.</li>\n                        </ol>\n                        <h6 onClick={scrollTop}>Back to top</h6>\n                    </div>\n                    <div id=\"editpersonalinfo\">\n                        <h4>CAN I EDIT MY PERSONAL INFO?</h4>\n                        <p>Sure you can! This is how:</p>\n                        <ol>\n                            <li>1. Once you logged in, click on 'Account in the navigation bar.</li>\n                            <li>2. Underneath your personal information you can click on 'Edit Information'.</li>\n                            <li>3. You will be able to edit your name, email address, password and avatar.</li>\n                            <li>4. Click on 'Save'.</li>\n                            <li><strong>* If you want to delete your account, you will find the button 'Delete' under the 'Save' one.</strong></li>\n                            <li><strong>* Please note that the events you have created will remain on the website if you don't remove them before deleting your account.</strong></li>\n                        </ol>\n                        <h6 onClick={scrollTop}>Back to top</h6>\n                    </div>\n                    <div id=\"doineedtopay\">\n                        <h4>DO I NEED TO PAY TO POST MY EVENT?</h4>\n                        <p>Not at all. DEVents is a free space intended to connect web developers and expand the community.</p>\n                        <h6 onClick={scrollTop}>Back to top</h6>\n                    </div>\n                    <div id=\"findevents\">\n                        <h4>HOW DO I FIND AN EVENT?</h4>\n                        <ol>\n                            <li>1. You don't need to be logged in to take a look at all the events saved in DEVents.</li>\n                            <li>2. Click on 'Find events' on the navigation bar.</li>\n                            <li>3. Meetups, workshops and conventions will be filtered by city. You just need to click on the desired city.</li>\n                        </ol>\n                        <h6 onClick={scrollTop}>Back to top</h6>\n                    </div>\n                    <div id=\"attendevents\">\n                        <h4>WHAT IF I WANT TO ATTEND AN EVENT?</h4>\n                        <p>In DEVents you will find 3 different types of event: meetups, workshops and conventions. You can filter all by city. There will be just cities displayed where any event will take place.</p>\n                        <p>You will find a link on the workshops and conventions that leads you to more information and contact data.</p>\n                        <p>In the case of the meetups, you will find all the information displayed in this website. The meetups are created by users of this web app and they will be responsible of saving the correct information for each event. This information can also be edited afterwards by the host.</p>\n                        <h6 onClick={scrollTop}>Back to top</h6>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Faq;","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from './Context';\nimport '../style/Logout.scss';\n\nconst Logout = () => {\n    const history = useHistory();\n    const { userData, setUserData } = useContext(Context);\n\n    const [isLoggedOut, setIsLoggedOut] = useState(false)\n\n    useEffect(() => {\n        setIsLoggedOut(true);\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            isLoggedOut && history.push('/');\n            setTimeout(() => {\n                setUserData('');\n            }, 500);\n        }, 3000);\n    });\n\n    return (\n        <div className=\"logout-container space-navbar\">\n            <p className=\"slide-from-top\">You are successfully logged out.</p>\n            <p className=\"slide-from-bottom\">See you soon, <span style={{ color: '#256eac' }}>{userData.name}</span></p>\n        </div>\n    );\n}\n\nexport default Logout;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from './Context';\nimport '../style/Logout.scss';\n\nconst DeletedAccount = () => {\n    const history = useHistory();\n    const { userData, setUserData } = useContext(Context);\n\n    const [isLoggedOut, setIsLoggedOut] = useState(false)\n\n    useEffect(() => {\n        setIsLoggedOut(true);\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            isLoggedOut && history.push('/');\n            setTimeout(() => {\n                setUserData('');\n            }, 500);\n        }, 3000);\n    });\n\n    return (\n        <div className=\"logout-container space-navbar\">\n            <p className=\"slide-from-top\">Your account was successfully deleted.</p>\n            <p className=\"slide-from-bottom\">Thank you and hopefully see you soon, <span style={{ color: '#256eac' }}>{userData.name}</span></p>\n        </div>\n    );\n}\n\nexport default DeletedAccount;\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport '../style/App.scss';\nimport NavBarSignedIn from \"./NavBarSignedIn\";\nimport NavBarSignedOut from \"./NavBarSignedOut\";\nimport Landing from \"./Landing\";\nimport Login from \"./Login\";\nimport Registration from './Registration'\nimport Events from \"./Events\";\nimport SignUp from './SignUp';\nimport Footer from './Footer';\nimport Account from \"./Account\";\nimport EventInformation from \"./EventInformation\";\nimport CreateEvent from \"./CreateEvent\";\nimport Contact from \"./Contact\";\nimport Faq from \"./Faq\";\nimport Context from './Context';\nimport Moment from \"moment\";\nimport Logout from './Logout';\nimport DeletedAccount from './DeletedAccount';\n\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  // const [events, setEvents] = useState('');\n  const [meetups, setMeetups] = useState('');\n  const [meetupsCities, setMeetupsCities] = useState('');\n  const [workshops, setWorkshops] = useState('');\n  const [workshopsCities, setWorkshopsCities] = useState('');\n  const [conventions, setConventions] = useState('');\n  const [conventionsCities, setConventionsCities] = useState('');\n  const [allEventsTogether, setAllEventsTogether] = useState('');\n\n  // so that the user can delete his events althought they took already place in the past, we need an array of ALL the meetups without filtering them by date:\n  const [unfilteredMeetups, setUnfilteredMeetups] = useState('');\n\n  const [userData, setUserData] = useState(null);\n  // localstorage to save the token coming from the header. by clicking on signout the localstorage will be cleared:\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  // this is the state that is going to carry all the information of one specific event, when the user clicks on it to see the description:\n  const [eventInfo, setEventInfo] = useState(null);\n\n  const [lat, setLat] = useState('');\n  const [lng, setLng] = useState('');\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  // FUNCTION FETCHING ALL THE EVENTS:\n  const fetchEvents = async () => {\n    const options = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n\n    const allEvents = [];\n\n    const allMeetups = [];\n\n    const request1 = await fetch('/events', options);\n    const response1 = await request1.json();\n    response1.events.map(meetup => {\n      allMeetups.push({\n        title: meetup.title,\n        description: meetup.description,\n        url: meetup.website,\n        date: meetup.date,\n        time: meetup.time,\n        city: meetup.location.split(', ')[1],\n        coordinates: meetup.coordinates,\n        imgUrl: meetup.imgUrl,\n        location: meetup.location,\n        authorId: meetup.authorId,\n        _id: meetup._id,\n        type: 'meetup',\n        lat: parseFloat(meetup.coordinates.split(',')[0].slice(7, 14)),\n        lng: parseFloat(meetup.coordinates.split(',')[1].slice(6, 13))\n      });\n      allEvents.push({\n        title: meetup.title,\n        description: meetup.description,\n        url: meetup.website,\n        date: meetup.date,\n        time: meetup.time,\n        city: meetup.location.split(', ')[1],\n        coordinates: meetup.coordinates,\n        imgUrl: meetup.imgUrl,\n        location: meetup.location,\n        authorId: meetup.authorId,\n        _id: meetup._id,\n        type: 'meetup',\n        lat: parseFloat(meetup.coordinates.split(',')[0].slice(7, 14)),\n        lng: parseFloat(meetup.coordinates.split(',')[1].slice(6, 13))\n      });\n    });\n\n    setUnfilteredMeetups(allMeetups);\n\n    const filteredMeetups = allMeetups.filter(meetup => new Date(meetup.date).getTime() > new Date().getTime());\n\n    filteredMeetups.sort((a, b) => new Moment(a.date).format('MMDDYYYY') - new Moment(b.date).format('MMDDYYYY'));\n    const citiesWithMeetups = [];\n    filteredMeetups.map(event => citiesWithMeetups.push(event.city));\n    setMeetupsCities([...new Set(citiesWithMeetups)].sort());\n    setMeetups(filteredMeetups);\n\n    const allWorkshops = [];\n\n    const request2 = await fetch('/workshops', options);\n    const response2 = await request2.json();\n    // console.log('WORKSHOPS - Response: ', response2);\n    response2.events.map(workshop => { allWorkshops.push(workshop); allEvents.push(workshop) });\n    allWorkshops.sort((a, b) => new Moment(a.date).format('MMDDYYYY') - new Moment(b.date).format('MMDDYYYY'))\n    const allFilteredWorkshops = allWorkshops.filter(workshop => new Date(workshop.date).getTime() > new Date().getTime());\n\n    const citiesWithWorkshops = [];\n    allFilteredWorkshops.map(event => citiesWithWorkshops.push(event.city));\n    setWorkshopsCities([...new Set(citiesWithWorkshops)].sort());\n    setWorkshops(allFilteredWorkshops);\n\n\n    const allConventions = [];\n\n    const request3 = await fetch('/conventions', options);\n    const response3 = await request3.json();\n    // console.log('CONVENTIONS - Response: ', response3);\n    response3.events.map(convention => { allConventions.push(convention); allEvents.push(convention) });\n    allConventions.sort((a, b) => new Moment(a.date).format('MMDDYYYY') - new Moment(b.date).format('MMDDYYYY'))\n    const allFilteredConventions = allConventions.filter(convention => new Date(convention.date).getTime() > new Date().getTime());\n\n    const citiesWithConventions = [];\n    allFilteredConventions.map(event => citiesWithConventions.push(event.city));\n    setConventionsCities([...new Set(citiesWithConventions)].sort());\n    setConventions(allFilteredConventions);\n\n    const filteredEvents = allEvents.filter(event => new Date(event.date).getTime() > new Date().getTime());\n    // console.log('FILTERED EVENTS: ', filteredEvents);\n    setAllEventsTogether(filteredEvents);\n  };\n\n  // console.log('ALL EVENTS FETCHED: ', allEventsTogether);\n\n  // FETCHING THE USER INFORMATION - USER SESSION:\n  const getUserData = async () => {\n    const options = {\n      method: 'GET',\n      headers: {\n        'x-auth': token,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n\n    const response = await fetch('/users', options);\n    const data = await response.json();\n    console.log('RESPONSE TO GET USERDATA: ', data)\n    setUserData(data.user);\n  };\n\n\n  // FETCHING GOOGLE MAPS API:\n  useEffect(() => {\n    const script = document.createElement('script');\n\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`;\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    }\n  }, []);\n\n\n  // LOAD THE USER DATA IF LOGGED IN:\n  useEffect(() => {\n    if (token) {\n      setLoggedIn(true);\n      getUserData();\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n\n  useEffect(() => {\n    fetchEvents();\n  }, [eventInfo]);\n\n  useEffect(() => {\n    fetchEvents();\n  }, [userData]);\n\n  // console.log('EVENT INFO: ', eventInfo);\n\n  return (\n    <div className=\"App\">\n      <Context.Provider value={{ unfilteredMeetups, lat, setLat, lng, setLng, allEventsTogether, meetupsCities, workshopsCities, conventionsCities, getUserData, fetchEvents, loggedIn, setLoggedIn, token, setToken, userData, setUserData, eventInfo, setEventInfo, meetups, setMeetups, workshops, conventions }}>\n        <HashRouter>\n          {\n            loggedIn ?\n              <NavBarSignedIn />\n              :\n              <NavBarSignedOut />\n          }\n          <Switch>\n            <Route path=\"/\" exact component={Landing} />\n            <Route path=\"/registration\" component={Registration} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/events\" component={Events} />\n            <Route path=\"/account\" component={Account} />\n            <Route path=\"/event\" component={EventInformation} />\n            <Route path=\"/addevent\" component={CreateEvent} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route path=\"/faq\" component={Faq} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/deletedaccount\" component={DeletedAccount} />\n          </Switch>\n          <Footer />\n        </HashRouter>\n      </Context.Provider>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './components/App';\nimport './assets/fonts/Hallosans.otf'\nimport Favicon from 'react-favicon'\nimport img from './assets/img/favicon.ico'\nimport { faDivide } from '@fortawesome/free-solid-svg-icons';\n\n\nReactDOM.render(\n  <div>\n  <Favicon url={img}/>\n    <App />\n  \n      \n  </div>\n   \n   \n \n  ,document.getElementById('root')\n);\n"],"sourceRoot":""}